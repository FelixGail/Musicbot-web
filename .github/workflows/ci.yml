name: BUILD

on:
  pull_request:
    types: [labeled]
  push:

jobs:
  build:
    name: Build
    strategy:
      matrix:
        node-version: [12.x]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.label.name == 'allow-build'

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: v1-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            v1-${{ runner.os }}-yarn-
      - name: install dependencies
        run: yarn
      - name: Build
        run: yarn build
      - name: Upload client production build
        uses: actions/upload-artifact@v2
        with:
          name: musicbot-web
          path: build
          retention-days: 30
  release:
    name: Create Release
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Install zip
        run: sudo apt install zip -y
      - uses: actions/checkout@v1
      - name: Download client production build
        uses: actions/download-artifact@v2
        with:
          name: musicbot-web
          path: build
      - name: Zip build artifact
        run: cd build && zip -r ../musicbot-web.zip ./* && cd ..
      - name: Calculate variables
        id: vars
        run: |
          echo ::set-output name=version_tag::$(cat package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed -E 's/(version)|[:,\",]//g' | tr -d '[[:space:]]')
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "musicbot-web.zip"
          body: ${{ github.event.head_commit.message }}
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.vars.outputs.version_tag }}
  docker:
    name: Publish docker container
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')
    steps:
      - uses: actions/checkout@v1
      - name: Download production build
        uses: actions/download-artifact@v2
        with:
          name: musicbot-web
          path: docker/build
      - name: Calculate variables
        id: vars
        run: |
          export VERSION=$(cat package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed -E 's/(version)|[:,\",]//g' | tr -d '[[:space:]]')
          export BRANCH=$(echo ${{ github.ref }} | sed 's/refs\/heads\///')
          echo ::set-output name=version_tag::$([ "$(echo $BRANCH)" = 'master' ] && echo "latest,${VERSION}" || echo "latest-${BRANCH},${VERSION}-${BRANCH}")
      - name: Build & Publish
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: felixgail/musicbot-web
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          workdir: docker
          tags: "${{ steps.vars.outputs.version_tag }},${{ github.sha }}"
