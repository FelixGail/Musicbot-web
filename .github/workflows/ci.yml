name: BUILD

on:
  pull_request:
    types: [labeled]
  push:

jobs:
  build:
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    name: Build and package
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' || github.event.label.name == 'allow-build'

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build, and package
        run: |
          yarn
          yarn bootstrap
          yarn build
          yarn pkg packages/server -o build/musicbot-${{ matrix.os }}
      - name: build arm
        if: ${{ matrix.os }} == "ubuntu-latest"
        run: |
          yarn pkg packages/server/package.json -o build/musicbot-arm -t linux-armv7 --no-bytecode
      - name: Change permissions
        run: |
          find build -type f -print0 | xargs -0 chmod +x
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: musicbot-executables
          path: build/
  release:
    name: Create Release
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - name: set version variable
        id: vars
        run: |
          echo ::set-output name=version_tag::$(cat package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed -E 's/(version)|[:,\",]//g' | tr -d '[[:space:]]')
      - uses: actions/download-artifact@master
        with:
          name: musicbot-executables
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "musicbot-executables/*"
          body: ${{ github.event.head_commit.message }}
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.vars.outputs.version_tag }}
